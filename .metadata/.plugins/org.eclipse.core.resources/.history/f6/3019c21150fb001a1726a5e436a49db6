package ds.arrays.homework;

import org.junit.Test;

public class P002SquareBF {

	/*Given an array of integers sorted in non-decreasing order, return an array of the squares of each number, also in sorted non-decreasing order.

	Input: [-8,-3,3,4,10]
	Output: [9,9,16,64,100]

	Input: [-8,-3,0,0,10]
	Output: [0,0,9,64,100]

	Input: {0,1}
	Output: {0,1} 

	Input: {}
	output: Exception

pseudocode :
1)  If input is null -> Illegal Argument Exception
2)	If input.length > 1
      i)Traverse the array till its length
         a)input[i] element -> input[i] * input[i];
3) Sort the current array in Ascending order:
      i)Traverse the array till its length - 1
      int temp = 0;
         a)if(input[i+1] - input[i] >= 0);
              continue;
           else if (input[i+1] - input[i] < 0)
              temp = input[i+1];
              input[i+1] = input[i];
              input[i] = temp;
	 */

		
	
	private boolean squareArray(int[] input) {
		
		for(int i=0;i<input.length;i++) {
			
			//decreasing sequence
			while(input[i]>=input[i+1]) {
				
			}
		}
		
		return false;
		
		
	}
	
	
	@Test
	public void testData1(){
		
		int input[]= {1,2,3,3,4,4,4,4,5};
		
		System.out.println("Array is monotonic");
		
	}

	
	
}
