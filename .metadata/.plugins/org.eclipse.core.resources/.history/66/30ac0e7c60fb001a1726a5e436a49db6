package ds.arrays.homework;

import java.util.Arrays;

import org.junit.Test;

public class P003LuckyIntegerBF {

	/*
	 2) Given an array of integers, a lucky integer is an integer 
	 	which has a frequency in the array equal to its value.

		Return a lucky integer in the array. 
		If there are multiple lucky integers return the largest of them. 
		If there is no lucky integer return -1.

		Input: [1,2,3,3,4,4,4,4,5]
		Output: 4
		Explanation: 1, 2 and 4 are all lucky numbers, but 4 is the largest
	
		-----
	
		Input: [1,2,3,3,4,4,4,4,5]
		Output: 4
		
		Input: [0,-5]
		Output: illegal argument
		
		Input: [5]
		Output: -1
		
		Input: [1,1,1]
		Output: -1
		
		-----
		
		Pseudo-code:
		
		1. int luckyNumber = -1;
		
		2. Traverse input array till its length - current element 
			i. if(input[i] <= 0), throw illegal argument exception
				int count = 0;
				
			ii. Traverse input array from i+1 till its length - next element
		 		a. if(input[i] == input[j]){
		 				count++;
		 			}
		 		b. Lucky Number? - if(input[i] == count){
		 				luckyNumber = Math.max(luckyNumber,input[i]);
		 			}
		 3.	return lucky number
	
	*/
	
	private int solution(int[] input){
		
		int luckyNumber = -1;
		
		for(int i=0; i<input.length; i++){
			if(input[i] <= 0){
				throw new IllegalArgumentException();
			}
			
			int count=1;
			for(int j=i+1; j<input.length; j++){
				if(input[i] == input[j]){
					count++;
				}
				if(input[i] == count){
					luckyNumber = Math.max(luckyNumber, input[i]);
				}
			}
			
			
		}
		
		
		return luckyNumber;
	}
	
	@Test
	public void testData1(){

		int input[]= {1,2,2,3};

		System.out.println(solution(input));

	}

	
	
	
}
