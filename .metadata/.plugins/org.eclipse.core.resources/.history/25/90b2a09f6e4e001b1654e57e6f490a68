package revision.arrays.string;

import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;

import org.junit.Test;

public class P017RearrageString {

	/*
	 * 
	 * pseudo-code:
	 * 
	 * step 1: Find occurence of each charcter using HashMap 
	 * step 2: Sort the unique keySet using Arrays.sort
	 * 
	 * step 3: initialize consecutiveCount 
	 * step 4: Traverse each keys(use sorted char array for key reference) in the map 
	 * step 5: Loop till each keys occurrence > 0
	 * step 6: 		add the current key to Output and increment 
	 * 
	 * 
	 */

	private String rearrangeString(String s, int k) {

		StringBuffer output = new StringBuffer();

		char[] input = s.toCharArray();
		Map<Character, Integer> map = new HashMap<>();
		for (char c : input) {
			map.put(c, map.getOrDefault(c, 0) + 1);
		}

		Set<Character> set = map.keySet();

		Character[] inputKeySet = new Character[set.size()];
		set.toArray(inputKeySet);
		Arrays.sort(inputKeySet, Collections.reverseOrder());

		int inputKeySetSize = inputKeySet.length;
		int consecutiveCount = 0;

		for (int i = 0; i < inputKeySetSize; i++) {

			char currentChar = inputKeySet[i];

			while (map.get(currentChar) > 0) {

				output.append(currentChar);
				map.put(currentChar, map.get(currentChar) - 1);
				consecutiveCount++;
				
				if (consecutiveCount % k == 0 && consecutiveCount != 0) {

					// Loop till next char - value is there?
					int j = 1;
					char nextChar = inputKeySet[i + j];
					while (map.get(nextChar) == 0) {
						j++;
						if(j >= inputKeySetSize) break;
						nextChar = inputKeySet[i + j];
					}

					
					// if next char occurrence is present, print once and decrement value
					if (map.get(nextChar) > 0) {
						output.append(nextChar);
						map.put(nextChar, map.get(nextChar) - 1);
					} 
					// if next char occurrence is not present, then delete current char remaining values.
					else {
						map.put(currentChar, 0);
						break;
					}

				}

			}
		}

		return output.toString();
	}

	@Test
	public void inputData1() {
		String s = "zzzazz";
		int k = 2;

		System.out.println(rearrangeString(s, k));

	}

}
