package ds.arrays.homework;				

import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;

import org.junit.Test;				

public class P007bArrayIntersectionCollections {				


	/*			
	7) Given three integer arrays arr1, arr2 and arr3 sorted in strictly increasing order,			
	return a sorted array of only the integers that appeared in all three arrays.			

	Input: arr1 = [1,2,3,4,5], arr2 = [1,2,5,7,9], arr3 = [1,3,4,5,8]			
	Output: [1,5]			
	Explanation: Only 1 and 5 appeared in the three arrays.			

	123			
	132			
	213			
	231			
	312			
	321			

	Pseudo code:			
	1) check if all three array length are equal			
		findIntersection(arr1,arr2,arr3)		

	2) Create a map with key as input elements and value as occurence
	
	3) Print value == 3

	 */			

	private void ArrayIntersection(int[] arr1, int[] arr2, int[] arr3) {			

		Map<Integer,Integer> map = new HashMap<Integer, Integer>();
		
		for(int i: arr1){
			map.put(i, 1);
		}
		
		for(int i: arr2){
			if(map.containsKey(i))map.put(i, map.get(i)+1);
			else map.put(i, 1);
		}
		for(int i: arr3){
			if(map.containsKey(i))map.put(i, map.get(i)+1);
			else map.put(i, 1);
		}
		
		for(Entry entry: map.entrySet()){
			if(entry.getValue()==3)System.out.println(entry.getKey()+" ");
		}
		
		
	}	




	@Test			
	public void testData1(){			
		int arr1[]= {1,2,3,4,5},		
				arr2[]= {1,2,5,7,9},		
				arr3[]= {1,3,4,5,8};		
		ArrayIntersection(arr1,arr2,arr3);		
	}			
	@Test			
	public void testData2(){			
		int arr1[]= {-1,1,5},		
				arr2[]= {-1,1,5,7},		
				arr3[]= {-1,1,3,4,5,8};		
		ArrayIntersection(arr1,arr2,arr3);		
	}			
	@Test			
	public void testData3(){			
		int arr1[]= {1,2,4,5},		
				arr2[]= {5,7,9},		
				arr3[]= {1,3,4,5,8,9,};		
		ArrayIntersection(arr1,arr2,arr3);		
	}			
	@Test			
	public void testData4(){			
		int arr1[]= {1,2,3},		
				arr2[]= {5,7,9,10},		
				arr3[]= {2,3,4,5,11};		
		ArrayIntersection(arr1,arr2,arr3);		
	}			




}				
