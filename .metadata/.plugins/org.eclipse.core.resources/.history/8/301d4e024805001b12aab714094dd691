package ds.string.homework;

import java.math.BigInteger;
import java.util.Arrays;

import org.junit.Test;

public class P013PrimeCombination {

	/*	

Given a number, find all the combination of the prime number [without changing the sequence]

input:  38
output:  3	

input:  403198305
output: 	

---

pseudo-code:	



	 */	


	private void solution(String input){

		
		
		
		for(int i=0; i<input.length(); i++){
			for(int j=i+1; j<input.length(); j++){
				
				if(input.substring(i, j)!=0){
			        // Converting long to BigInteger 
			        BigInteger b = new BigInteger(input.substring(i, j)); 
			  
			        if( b.isProbablePrime(1))System.out.println(input.substring(i, j)); 
			    } 
			}
			}
		
		
		
	}

	@Test
	public void testData1(){

		String input= "38";

		solution(input);

	}

	@Test
	public void testData2(){

		String input= "403198305";

		solution(input);

	}
}
