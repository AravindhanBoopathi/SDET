package ds.string.homework;

import java.util.Arrays;

import org.junit.Test;

public class P002DecodeString {

	/*	

2) Given an encoded string, return its decoded string.

Input: s = "3[a]2[bc]"

			3 , a, 2, bc
Output: "aaabcbc"

Input: s = "3[a2[c]]"
Output: "accaccacc"


BF1:

	1. Split the input String with "Wildcard values" - returns String[] strInput = input.split("\\W+");


	2. for(int i=0; i < strInput.length-1; i++)
	 if(Character.isDigit(input[i])){




			for(int j=0; j<Character.getNumericvalue(input[i]); j++){
				syso(input[i+1]);
				if(Character.isAlpha(input[i+1]))syso(input[i+]);
			}


BF2:


 check for open bracket  - 

 		check before the first close bracket how many open brackets count
 				if (count = zero)
 					update input the string inside open and close bracket * the integer before the open bracket

 				if (count > 0)
 					for(int i=count; count>=0; count--)
 					update the input array with string inside the last open bracket * the integer before the open bracket

	3[a2[c]]

	 */	

	public void solutionBF(String input){

		int ocount = 0, ccount =0, index, multiplier, lengthSubs=0;
		String substring="";

		StringBuffer output = new StringBuffer();


		for(int i=0; i < input.length(); i++){
			if(input.charAt(i)=='['){
				ocount++;
			}	
			if(input.charAt(i)==']' && ocount>1){
				ccount++;
				ocount--;
			}


		}	
		if(ccount<1){

			multiplier = Integer.parseInt(Character.toString(input.charAt(input.indexOf('[')-1)));

			substring = input.substring((input.indexOf('[')+1), (input.indexOf(']')));

			print(multiplier, substring, output);
			System.out.println(output);
		}

		if(ccount>1){
			// 3[a2[c]]
//			if(input.charAt(input.lastIndexOf(']')-1)!='['){

			while(ccount>=1){
				multiplier = Integer.parseInt(Character.toString(input.charAt(input.lastIndexOf('[')-1)));

				index = input.lastIndexOf('[')+1; 
				
				while(input.charAt(index)!=']'){
					substring = input.substring(index, index+1 );
					index++;
					lengthSubs++;
				}
				
				print(multiplier, substring, output);
			
				input = input.substring(0, input.lastIndexOf('['))+
						substring+
						input.substring(input.lastIndexOf('[')+lengthSubs, input.length());
				
				ccount--;
			}
			System.out.println(output);
		}	
		

	}

	public StringBuffer print(int multiplier, String substring, StringBuffer output){
		while(multiplier>0){
			output.append(substring);
			multiplier--;
		}
		return output;
	}

	private void solutionOptimal(String input){
		
		int index, multiplier;
		String substring="";
		
		while(input.lastIndexOf('[')>-1){
			
			multiplier = Integer.parseInt(Character.toString(input.charAt(input.lastIndexOf('[')-1)));
			
			index = input.lastIndexOf('['); 
			
			while(input.charAt(index)!=']'){
				substring = input.substring(index, index+1 );
				index++;
				
			}
			input = input.substring(0, input.lastIndexOf('['))+
					substring+
					input.substring(input.lastIndexOf('[')+index, input.length());
			System.out.println(input);
		}
		
		
	}
	
	

	@Test
	public void testData1(){

//				String input= "3[a2[c]]";
		String input= "3[ac]";

		System.out.println(input);
		solutionOptimal(input);
	}


}


