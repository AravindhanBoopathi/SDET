package ds.string.homework;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;

import org.junit.Test;

public class P013PrimeCombination {

	/*	

Given a number, find all the combination of the prime number [without changing the sequence]

input:  38
output:  3	

input:  403198305
output: 	

---

pseudo-code:	



	 */	


	private void solution(String input){
		for(int i=0; i<input.length(); i++){
			if((Integer.parseInt(input.substring(i,i+1)))!=0){
				for(int j=i+1; j<input.length(); j++){


					// Converting long to BigInteger 
					BigInteger b = new BigInteger(input.substring(i, j));  // O(N)

					if( b.isProbablePrime(1))
						System.out.println(input.substring(i, j)); 
				} 
			}
		}



	}

	private void solution1(String input){
		char[] inputChar = input.toCharArray();
	

		List<String> list = new ArrayList<String>(); 
		for(char c: inputChar){
			String temp = Character.toString(c);
			list.add(temp);
		}

//		Iterator<String> iterator = list.iterator(); 
//		while (iterator.hasNext()) 
//			System.out.println(iterator.next());
				
		for(int i=0; i<= inputChar.length-1; i++){
			list.add(input.substring(i, inputChar.length));
			
		}

		for(int i=inputChar.length-1; i> 0; i--){

			list.add(input.substring(0, i));
			
		}

		for(String s: list){
			
			BigInteger b = new BigInteger(s); 

			if( b.isProbablePrime(1))System.out.println(s);
			
		}
		
//		// Converting long to BigInteger 
					 
		
			
		



	}

	
	
	
//	@Test
//	public void testData1(){
//
//		String input= "38";
//
//		solution(input);
//
//	}

	@Test
	public void testData2(){

		String input= "403198305";

		solution1(input);

	}
}
