package ds.arrays;

import java.util.HashSet;

import org.junit.Test;

public class P001SumIndicesHashing {

	//Hashing
	
	/*	input: {2,3,1,4,6}
	 * 	k: 5
	 * 
	 * 1. find sum[i] = 0 (sum + input)
	 * 
	 * 2. find diff[i] = (sum - k)
	 * 
	 */

	private boolean getSumIndices(int[] input,int k){

		int sum[] = new int[input.length +1];
		int diff[] = new int[input.length +1];
		
		for(int i=0; i < input.length; i++){
			sum[i+1] = sum[i] + input[i];
			diff[i] = sum[i+1] - k;
		}
		
		System.out.println(sum);
		System.out.println(diff);
		/*
		HashSet<Integer> values = new HashSet<Integer>(); 
		
		for (int i = 0; i < input.length; i++) { 
			if (values.contains(sum[i+1]-k)) return true; 
			
			values.add(input[i]); 
		}*/
		return false;
			
	}



	@Test
	public void example1(){

		int[] numbers = {1,2,2,1,1};
		int target = 3;

		
		System.out.println(getSumIndices(numbers, target));

	}

/*	@Test
	public void example2(){

		int[] numbers = {2,3,-1,4,6};
		int target = 5;

		System.out.println(getSumIndices(numbers, target));

	}

	@Test
	public void example3(){

		int[] numbers = {2,3,1,4,1,4};
		int target = 5;

		System.out.println(getSumIndices(numbers, target));

	}*/

}
